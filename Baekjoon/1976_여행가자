#include <iostream>
#include <string>

using namespace std;

int N, M;
int arr[201][201];
int parent[201];
string ans = "YES";

// 부모노드 찾아주는 함수
int getParent(int x) {
	if (parent[x] == x)
		return x; // 최종 부모노드
	return parent[x] = getParent(parent[x]);
}

// 두 부모노드를 합치는 함수
void unionParent(int a, int b) {
	// 작은 값을 부모노드로 선택
	if (a < b)
		parent[getParent(b)] = getParent(a);
	else
		parent[getParent(a)] = getParent(b);
}
int main() {
	ios::sync_with_stdio(false);
	cin >> N >> M;

	for (int i = 1; i <= N; i++) {
		parent[i] = i;
	}

	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			cin >> arr[i][j];
			if (j > i && arr[i][j] == 1) {
				unionParent(i, j);
			}
		}
	}
	/*for (int i = 1; i <= N; i++) {
		cout << parent[i] << ' ';
	}*/
	int p;
	int node;
	for (int i = 0; i < M; i++) {
		cin >> node;
		if (i == 0)
			p = getParent(node);
		if (getParent(node) != p) {
			ans = "NO";
		}
	}
	cout << ans << '\n';
	return 0;
}