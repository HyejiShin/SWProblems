// https://www.acmicpc.net/problem/2169
// 2169_로봇 조종하기__시간초과

#include <iostream>
#include <queue>
#include <utility>
#include <algorithm>

using namespace std;

int N, M, ans = 0;
int arr[1001][1001], check[1001][1001];
queue < pair<int, int> > q;
int dx[3] = { 0, 1, 0 };
int dy[3] = { 1, 0, -1 };

void solve(int x, int y, int sum) {
	if (x == N && y == M) {
		ans = max(ans, sum);
		return;
	}

	for (int d = 0; d < 3; d++) {
		int nx = x + dx[d];
		int ny = y + dy[d];
		if (nx < 1 || nx > N || ny < 1 || ny > M || check[nx][ny] != 0)
			continue;
		check[nx][ny] = 1;
		solve(nx, ny, sum + arr[nx][ny]);
		check[nx][ny] = 0;
	}
	return;
}

int main() {
	ios::sync_with_stdio(false);
	
	cin >> N >> M;

	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= M; j++) {
			cin >> arr[i][j];
		}
	}
	
	check[1][1] = 1;
	solve(1, 1, arr[1][1]);

	cout << ans << '\n';
	return 0;
}