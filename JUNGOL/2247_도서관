#include <iostream>
#include <algorithm>
#include <vector>
#include <utility>

using namespace std;

int N, s, e, ss, ee, mmax, mmmax;
vector<pair<int, int> > vec;

int main() {
	ios::sync_with_stdio(false);
	cin >> N;
	for (int i = 0; i < N; i++) {
		int sss, eee;
		cin >> sss >> eee;
		vec.push_back({ sss, eee });
	}
	
	sort(vec.begin(), vec.end());

	/*cout << '\n';
	for (int i = 0; i < vec.size(); i++) {
		cout << vec[i].first << ' ' << vec[i].second << '\n';
	}*/
	s = vec[0].first;
	e = vec[0].second;

	for (int i = 1; i < vec.size(); i++) {
		//cout << "ê°’ : " << vec[i].first << ' ' << vec[i].second << '\n';
		if (vec[i].first > e) {
			mmax = max(mmax, e - s);
			ss = e;
			ee = vec[i].first;
			s = vec[i].first;
			e = vec[i].second;
			mmmax = max(mmmax, ee - ss);
		}
		else if (vec[i].first <= e) {
			if(e < vec[i].second)
				e = vec[i].second;
		}
		if (i == vec.size() - 1) {
			mmax = max(mmax, e - s);
		}
		/*cout << "s / e : " << s << ' ' << e << '\n';
		cout << "ss / ee : " << ss << ' ' << ee << '\n';
		cout << "mmax / mmmax : " << mmax << ' ' << mmmax << "\n\n";*/
	}
	cout << mmax << ' ' << mmmax << '\n';
	return 0;
}